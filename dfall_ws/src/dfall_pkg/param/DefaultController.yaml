# ------------------------------------------------------
# PARAMTERS FOR THE TAKE-OFF AND LANDING MANOEUVRES

# Max setpoint change per second
max_setpoint_change_per_second_horizontal  :  0.20 # [meters]
max_setpoint_change_per_second_vertical    :  0.10 # [meters]

# Max error for yaw angle
max_setpoint_error_yaw_degrees: 60

# The thrust for take off spin motors
takeoff_spin_motors_thrust: 8000
# The time for the take off spin motors
takoff_spin_motots_time: 0.8

# Height change for the take off move-up
takeoff_move_up_start_height: 0.1
takeoff_move_up_end_height:   0.4
# The time for the take off spin motors
takoff_move_up_time: 1.2


# ------------------------------------------------------
# PARAMTERS THAT ARE STANDARD FOR A "CONTROLLER SERVICE"

# The mass of the crazyflie, in [grams]
mass : 30

# Frequency of the controller, in [hertz]
control_frequency : 200

# Quadratic motor regression equation (a0, a1, a2)
motorPoly : [5.484560e-4, 1.032633e-6, 2.130295e-11]

# The min and max for saturating 16 bit thrust commands
command_sixteenbit_min : 1000
command_sixteenbit_max : 60000

# The default setpoint, the ordering is (x,y,z,yaw),
# with unit [meters,meters,meters,radians]
default_setpoint : [0.0, 0.0, 0.4, 0.0]

# Boolean indiciating whether the "Debug Message" of this agent should be published or not
shouldPublishDebugMessage : false

# Boolean indiciating whether the debugging ROS_INFO_STREAM should be displayed or not
shouldDisplayDebugInfo : false

# The LQR Controller parameters for "mode = 3"
gainMatrixThrust_NineStateVector    :  [ 0.00, 0.00, 0.98, 0.00, 0.00, 0.25, 0.00, 0.00, 0.00]
gainMatrixRollRate                  :  [ 0.00,-6.20, 0.00, 0.00,-3.00, 0.00, 5.20, 0.00, 0.00]
gainMatrixPitchRate                 :  [ 6.20, 0.00, 0.00, 3.00, 0.00, 0.00, 0.00, 5.20, 0.00]
gainMatrixYawRate                   :  [ 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 2.30]

# A flag for which estimator to use, defined as:
# 1  -  Finite Different Method,
#       Takes the poisition and angles directly as measured,
#       and estimates the velocities as a finite different to the
#       previous measurement
# 2  -  Point Mass Per Dimension Method
#       Uses a 2nd order random walk estimator independently for
#       each of (x,y,z,roll,pitch,yaw)
# 3  -  Quad-rotor Model Based Method
#       Uses the model of the quad-rotor and the previous inputs
estimator_method : 1

# THE POINT MASS KALMAN FILTER (PMKF) GAINS AND ERROR EVOLUATION
# > For the (x,y,z) position
PMKF_Ahat_row1_for_positions  :  [  0.6723, 0.0034]
PMKF_Ahat_row2_for_positions  :  [-12.9648, 0.9352]
PMKF_Kinf_for_positions       :  [  0.3277,12.9648]
# > For the (roll,pitch,yaw) angles
PMKF_Ahat_row1_for_angles     :  [  0.6954, 0.0035]
PMKF_Ahat_row2_for_angles     :  [-11.0342, 0.9448]
PMKF_Kinf_for_angles          :  [  0.3046,11.0342]

#PMKF_Ahat_row1_for_angles     :  [  0.6723, 0.0034]
#PMKF_Ahat_row2_for_angles     :  [-12.9648, 0.9352]
#PMKF_Kinf_for_angles          :  [  0.3277,12.9648]


